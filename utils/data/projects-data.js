export const projectsData = [
    {
        id: 1,
        name: 'Swiss Telecom',
        description: "Maintanance and moderinization of the telecom software app, both backend and frontend. The app is dealing with alerts, outages, notifications. It maintains reliability of the entire telecom network.",
        tools: ['Java 11', 'Oracle SQL', 'Bitbucket', 'Confluence', "Maven", "JBoss", "PHP", "Sencha ExtJS", "Rest", "SOAP"],
        company: 'Infosys,',
        role: 'Technology Lead',
        code: '',
        demo: '',
    },
    {
        id: 2,
        name: 'E-commerce application',
        description: "Although my position was a full-stack developer, I was doing backend tasks and some frontend changes. My main strength is the backend devlopment, although I have knowledge for front-end development and frameworks. What attracted me to this position was the modern tech-stack and the opportunity it gave me to improve my skills while working. The domain was e-commerce application with a microservice architecture, using NoSQL as well as SQL database, it was deployed on k8s cluster hosted on Azure cloud. The infrastucture was mainly maintained by a DevOps team, but we had to know enough to do our job, logs, restarts, etc. The front-end was on ReactJS, communication with different teams and the business. We used Docker for local env setup during development.",
        tools: ["Java 17", "Spring Boot 2.X- 3.X", "PostgreSQL", "Kubernetes", "Docker", "Azure Serice",
            "Bus", "Azure - Application Insights", "Azure - chronjobs", "Datadog", "Feature Flags", "Openrewrite"],
        company: 'TechPods,',
        role: 'Full-Stack Developer',
        code: '',
        demo: '',
    },
    {
        id: 3,
        name: 'Gaming/Gambling platform',
        description: 'I was doing maintaince tickets on a fleet of microservices focused on account and access management, updating docs, clarified business requirements, code reviews, and worked closely with other teams and different professionals: QAs, POs, TLs. There were performance improvement tasks, DB investigations, etc. One of my tasks was about integrating Google re-CAPTCHA in login and registration flows. I was also responsible for delivering release artifacts for each task and sometimes providing them for procedures such as GLI certification. First couple of weeks improved the documentation of many services and built sequence and activity diagrams with PlantUML to understand the services well enough and provide clarity for other teams. Also maintained Swagger docs up to date with every task, as well as took part in the onboarding of one new colleague.',
        tools: ["Spring Boot", "Java 11", "Microsoft SQL Server", "RabbitMQ", "Swagger", "Jenkins",
            "Maven", "Nexus", "PlantUML", "Grafana", "Linux shell", "ssh"
        ],
        company: 'GAN',
        role: 'Senior Java Developer',
        code: '',
        demo: '',
    },
    {
        id: 4,
        name: 'Ticket management application',
        description: 'The application was hosted on very big cloud infrastructure with multiple shards and tenants on each shard. There was centralized logging and monitoring implemented with Splunk and SignalFX. I was in a team supporting the module responsible for query search. While it was rewritten as a microservice by another team, our team was responsible for optimizing the queries translation from custom query language to JQL. We also had SLO targets monitoring, and investigation of performance drops. We had a rotation role responding to the questions and requests of other teams as well as on-call rotation with my teammates during which we supported failures in our module 24/7. What I learned from this project was to try to be proactive in my work. Take more decisions on my own and try to suggest improvements to the system. We had CI/CD in place and I was responsible for deploying my implementations on pre-prod and prod environments using feature flags and gradual rollout strategy. We used LaunchDarkly for feature flag management.',
        tools: ["Java 8/11", "InteliJ", "Postgres DB", "Docker", "Mac OS", "Git", "BitBucket", "LaunchDarkly", "SignalFx", "Splunk", "Confluence", "Jira"],
        company: 'SoftServe',
        role: 'Abiliton Intermediate Software Engineer',
        code: '',
        demo: '',
    },
    {
        id: 5,
        name: 'Payments reformatting system',
        description: 'The project was about reformatting payments between big corporations and banks. We had input text file for payments and an output file requirements. And our job was to make an implementation which will reformat the payments. The benefit I had from working on this project was learning how to write code following clean code and architectural best practices and writing unit and integration tests. I worked with more experienced developers and was able to learn from them. I learned how to do PR reviews, how to work with Jenkins on user level. We used Scrum for organizing our work flow.',
        tools: ["Java EE", "InteliJ", "PostgreSQL", "Junit 4/5", "BitBucket", "Jenkins", 
            "JBoss application server with dockerized local environment", "Jira", "Scrum", "Kanban"],
        company: 'TIS',
        role: 'Software Engineer',
        code: '',
        demo: '',
    },
    {
        id: 6,
        name: 'Platform for Loan management',
        description: 'Loan management bank application for internal usage. Waterfall methodology.Test environment deployments and servers were maintained by the developers/us : Microsoft Server (Apache Web server as a gateway to Apache Tomcat containers), Manual testing, SOAP communication with ESB services and other applications.',
        tools: ["Java EE"," Eclipse", "Struts 2", "ESB", "JSP", "JSTL", "MS SQL Server", "JPA", "CVS", "Apache Web Server with Apache Tomcat web container"],
        company: 'Raiffeisen bank',
        role: 'Junior/Mid Java Developer',
        code: '',
        demo: '',
    },
    {
        id: 7,
        name: 'Early Warning Signals',
        description: 'Deals with delayed loans and management protocols for the delayed loans,etc. Struts 1, again with MS SQL Server. Enterprise application wrapped as EARfrom three different projects and deployed to IBM WebSphere. It was relying on lots of stored procedures interacting with the backend. Transactional operations in the stored procedures. Maintaining the front end as well as the back end. Waterfall methodology. During this project life span I was mentoring 2 trainees with the knowledge I had gained from the first project I worked on.',
        tools: ["Java EE","Eclipse", "Struts 1", "MS SQL Server" , "JPA", "CVS", "IBM WebSphere", "ESB", "SOAP services"],
        company: 'Raiffeisen bank',
        code: '',
        role: 'Junior/Mid Java Developer',
        demo: '',
    },
    {
        id: 8,
        name: 'Credit register dependency system retirement',
        description: "Longer project with a release after an year of development of big functionality which helped to retire another system. With this implementation the organisation managed to cut the costs associated with the retired system. We delivered custom implementation to replace the old system . I was able to take the decisions on how to implement the code inside the monolith application that was going to replace the retired system. During the project life span I was mentoring a new team member.",
        tools: ["Java EE", "Eclipse", "Struts 2", "MS SQL Server", "JPA", "GitLab", "Git", "Jira", "Apache Web", "Server with Apache Tomcat web container", "SOAP services", "ESB"],
        company: 'Raiffeisen bank',
        code: '',
        demo: '',
        role: 'Mid Java Developer',
    }
];


// Do not remove any property.
// Leave it blank instead as shown below

// {
//     id: 1,
//     name: '',
//     description: "",
//     tools: [],
//     role: '',
//     code: '',
//     demo: '',
// },